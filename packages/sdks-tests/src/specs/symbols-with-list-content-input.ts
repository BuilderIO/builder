export const SYMBOLS_WITH_LIST_CONTENT_INPUT = {
  data: {
    title: 'react-sdk',
    themeId: false,
    blocks: [
      {
        '@type': '@builder.io/sdk:Element',
        '@version': 2,
        id: 'builder-fdc6514a5f0e4bcab8d3a981e5adb164',
        component: {
          name: 'Symbol',
          options: {
            symbol: {
              content: {
                data: {
                  inputs: [
                    {
                      '@type': '@builder.io/core:Field',
                      meta: {},
                      name: 'language',
                      type: 'list',
                      defaultValue: [{ code: 'HN' }],
                      required: false,
                      subFields: [
                        {
                          '@type': '@builder.io/core:Field',
                          meta: {},
                          name: 'code',
                          type: 'text',
                          required: false,
                          subFields: [],
                          helperText: '',
                          autoFocus: false,
                          simpleTextOnly: false,
                          disallowRemove: false,
                          broadcast: false,
                          bubble: false,
                          hideFromUI: false,
                          hideFromFieldsEditor: false,
                          showTemplatePicker: true,
                          permissionsRequiredToEdit: '',
                          advanced: false,
                          copyOnAdd: true,
                          onChange: '',
                          behavior: '',
                          showIf: '',
                          mandatory: false,
                          hidden: false,
                          noPhotoPicker: false,
                          model: '',
                          supportsAiGeneration: false,
                          defaultCollapsed: false,
                        },
                      ],
                      helperText: '',
                      autoFocus: false,
                      simpleTextOnly: false,
                      disallowRemove: false,
                      broadcast: false,
                      bubble: false,
                      hideFromUI: false,
                      hideFromFieldsEditor: false,
                      showTemplatePicker: true,
                      permissionsRequiredToEdit: '',
                      advanced: false,
                      copyOnAdd: true,
                      onChange: '',
                      behavior: '',
                      showIf: '',
                      mandatory: false,
                      hidden: false,
                      noPhotoPicker: false,
                      model: '',
                      supportsAiGeneration: false,
                      defaultCollapsed: false,
                    },
                    {
                      '@type': '@builder.io/core:Field',
                      meta: {},
                      name: 'newField1',
                      type: 'text',
                      required: false,
                      subFields: [],
                      helperText: '',
                      autoFocus: false,
                      simpleTextOnly: false,
                      disallowRemove: false,
                      broadcast: false,
                      bubble: false,
                      hideFromUI: false,
                      hideFromFieldsEditor: false,
                      showTemplatePicker: true,
                      permissionsRequiredToEdit: '',
                      advanced: false,
                      copyOnAdd: true,
                      onChange: '',
                      behavior: '',
                      showIf: '',
                      mandatory: false,
                      hidden: false,
                      noPhotoPicker: false,
                      model: '',
                      supportsAiGeneration: false,
                      defaultCollapsed: false,
                    },
                  ],
                  blocks: [
                    {
                      '@type': '@builder.io/sdk:Element',
                      '@version': 2,
                      bindings: {
                        'component.options.text':
                          'var _virtual_index=state.languageItem.code;return _virtual_index',
                      },
                      code: { bindings: { 'component.options.text': 'state.languageItem.code' } },
                      repeat: { collection: 'state.language' },
                      id: 'builder-080852d1360b4f08a54f436bbfe32b44',
                      meta: {
                        previousId: 'builder-8ede3ef8afbc499f9eb0152d1c3d63fc',
                        bindingActions: {
                          _newProperty: null,
                          component: { options: { text: null } },
                        },
                      },
                      component: { name: 'Text', options: { text: 'Enter some text...' } },
                      responsiveStyles: {
                        large: {
                          display: 'flex',
                          flexDirection: 'column',
                          position: 'relative',
                          flexShrink: '0',
                          boxSizing: 'border-box',
                          marginTop: '20px',
                          lineHeight: 'normal',
                          height: 'auto',
                        },
                      },
                    },
                  ],
                },
              },
              data: {
                language: [
                  {
                    code: 'HN',
                  },
                  {
                    code: 'EN',
                  },
                ],
              },
              model: 'symbol',
              entry: 'acd89180466e478d9e9c2f0ca803e650',
              ownerId: 'c59dc54530484a9cac6cbb759f637b2d',
            },
          },
        },
        responsiveStyles: {
          large: {
            display: 'flex',
            flexDirection: 'column',
            position: 'relative',
            flexShrink: '0',
            boxSizing: 'border-box',
          },
        },
      },
    ],
  },
};
