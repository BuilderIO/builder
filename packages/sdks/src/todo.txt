- VisualEditor:
  - Approach #1: For small changes, send data via cookies. For big changes, have the RSC poll the Firebase server for the latest autosave.
  pros:
    - no extra endpoint needed.
  cons:
    - slow: autosaves can take a while
    - clunky, error-prone: v1 hits issues with undos. sometimes data gets duplicated in the preview. lots of bugs to iron out

  - Approach #2: add a `app/api/builder-preview` `GET` API endpoint in the user's own server
  pros:
    - very fast, very reliable
  cons:
    - extra manual setup step (can be automated with a devtools script)
    - forces user to create an API endpoint, which means:
      - security risk: need to protect against
      - cost risk (they will most likely host it as a Vercel serverless function)
      
      
Other Tasks:
- Styles not working
  - change didn't work. CSS specifity issue.

- Next.js SDK TS types:
  - transpile React components to `.js` files
    - actually, Next is ok with JSX files being named `.js`?
  - add explicit `.js` extensions to everything, including component imports.


