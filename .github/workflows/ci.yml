---
name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use node version 12
        uses: actions/setup-node@v2
        with:
          node-version: 12

      - run: npm run ci:lint

  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12]
        package: ['webcomponents', 'widgets']

    steps:
      - uses: actions/checkout@v2

      - name: Use node version ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: NPM install
        run: npm ci
        working-directory: packages/${{ matrix.package }}

      - name: Build
        run: npm run ci:build --if-present
        working-directory: packages/${{ matrix.package }}

      - name: Test
        run: npm run ci:test --if-present
        working-directory: packages/${{ matrix.package }}

  sdks-base:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages/sdks

    steps:
      - name: Setup
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Cache SDKs
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: packages/.yarn/cache
          key: sdks-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn

      - name: Run prettier
        run: yarn ci:lint

      - name: Build Core
        run: yarn workspace @builder.io/sdk ci:build

      - name: Build SDK
        run: yarn workspace @builder.io/react build

      - name: Build
        run: yarn build:mitosis

      - name: Run tests
        run: yarn ci:test

  sdks-outputs:
    runs-on: ubuntu-latest

    strategy:
      # we still want to run all the SDK tests even if one fails, to get a full picture of the state of the SDKs.
      fail-fast: false
      matrix:
        sdk: ['svelte', 'qwik', 'react-native', 'react', 'solid', 'vue']

    defaults:
      run:
        working-directory: packages/sdks

    steps:
      - name: Setup
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Cache SDKs
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: packages/.yarn/cache
          key: sdks-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn

      - name: Build Core
        run: yarn workspace @builder.io/sdk ci:build

      - name: Build SDK
        run: yarn workspace @builder.io/react build

      - name: Build Mitosis
        run: yarn build:mitosis

      - name: Build SDK
        run: yarn workspace @builder.io/sdk-${{ matrix.sdk }} build

      - name: Install browsers for Playwright
        run: yarn workspace @builder.io/sdks-e2e-tests install-playwright

      - name: Build E2E tests
        run: yarn e2e:build:specs

      - name: Build E2E apps
        run: yarn e2e:build:${{ matrix.sdk }}

      - name: Run E2E tests
        run: yarn e2e:run:${{ matrix.sdk }}

  core-sdk:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages

    steps:
      - name: Setup
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Cache SDKs
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: packages/.yarn/cache
          key: sdks-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn

      - name: Build Core
        run: yarn workspace @builder.io/sdk ci:build

  old-react-sdk:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: packages

    steps:
      - name: Setup
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Cache SDKs
        id: cache-primes
        uses: actions/cache@v3
        with:
          path: packages/.yarn/cache
          key: sdks-cache-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn

      - name: Build Core
        run: yarn workspace @builder.io/sdk ci:build

      - name: Build SDK
        run: yarn workspace @builder.io/react build

      - name: Install browsers for Playwright
        run: yarn workspace @builder.io/sdks-e2e-tests install-playwright

      - name: Build E2E tests
        run: yarn workspace @builder.io/sdks-e2e-tests build

      - name: Build E2E apps
        run: yarn workspace @builder.io/react-tests build

      - name: Run E2E tests
        run: yarn workspace @builder.io/sdks e2e:run:old-react
